// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductAPI.Data;

namespace ProductAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231117101300_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("ProductAPI.Data.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaDH")
                        .HasColumnType("int");

                    b.Property<int>("idPro")
                        .HasColumnType("int");

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<int?>("DonHangMaDH")
                        .HasColumnType("int");

                    b.Property<int?>("ProductidPro")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDH", "idPro");

                    b.HasIndex("DonHangMaDH");

                    b.HasIndex("ProductidPro");

                    b.ToTable("ChiTietDonHangs");
                });

            modelBuilder.Entity("ProductAPI.Data.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddressKH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailKH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameKH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneKH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RequestKH")
                        .HasMaxLength(20000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ProductAPI.Data.DonHang", b =>
                {
                    b.Property<int>("MaDH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Ma")
                        .HasColumnType("int");

                    b.Property<string>("NgayDat")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NgayGiao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<double>("TongTien")
                        .HasMaxLength(200)
                        .HasColumnType("float");

                    b.HasKey("MaDH");

                    b.HasIndex("Ma");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("ProductAPI.Data.Product", b =>
                {
                    b.Property<int>("idPro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("categorySlug")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colors")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image01")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("image02")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<string>("size")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("slug")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("idPro");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductAPI.Data.TaiKhoan", b =>
                {
                    b.Property<int>("Ma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Role")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<string>("SDT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Ma");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("ProductAPI.Data.ChiTietDonHang", b =>
                {
                    b.HasOne("ProductAPI.Data.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("DonHangMaDH");

                    b.HasOne("ProductAPI.Data.Product", "Product")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("ProductidPro");

                    b.Navigation("DonHang");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductAPI.Data.DonHang", b =>
                {
                    b.HasOne("ProductAPI.Data.TaiKhoan", "TaiKhoan")
                        .WithMany("DonHangs")
                        .HasForeignKey("Ma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("ProductAPI.Data.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("ProductAPI.Data.Product", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });

            modelBuilder.Entity("ProductAPI.Data.TaiKhoan", b =>
                {
                    b.Navigation("DonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
